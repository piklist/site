Index: tinymce-advanced/trunk/mce/anchor/plugin.js
===================================================================
--- tinymce-advanced/trunk/mce/anchor/plugin.js	(revision 1303419)
+++ tinymce-advanced/trunk/mce/anchor/plugin.js	(revision 1643101)
@@ -12,19 +12,48 @@
 
 tinymce.PluginManager.add('anchor', function(editor) {
-	function showDialog() {
-		var selectedNode = editor.selection.getNode(), name = '';
+	var isAnchorNode = function (node) {
+		return !node.attr('href') && (node.attr('id') || node.attr('name')) && !node.firstChild;
+	};
+
+	var setContentEditable = function (state) {
+		return function (nodes) {
+			for (var i = 0; i < nodes.length; i++) {
+				if (isAnchorNode(nodes[i])) {
+					nodes[i].attr('contenteditable', state);
+				}
+			}
+		};
+	};
+
+	var isValidId = function (id) {
+		// Follows HTML4 rules: https://www.w3.org/TR/html401/types.html#type-id
+		return /^[A-Za-z][A-Za-z0-9\-:._]*$/.test(id);
+	};
+
+	var showDialog = function () {
+		var selectedNode = editor.selection.getNode();
 		var isAnchor = selectedNode.tagName == 'A' && editor.dom.getAttrib(selectedNode, 'href') === '';
+		var value = '';
 
 		if (isAnchor) {
-			name = selectedNode.name || selectedNode.id || '';
+			value = selectedNode.id || selectedNode.name || '';
 		}
 
 		editor.windowManager.open({
 			title: 'Anchor',
-			body: {type: 'textbox', name: 'name', size: 40, label: 'Name', value: name},
+			body: {type: 'textbox', name: 'id', size: 40, label: 'Id', value: value},
 			onsubmit: function(e) {
-				var id = e.data.name;
+				var id = e.data.id;
+
+				if (!isValidId(id)) {
+					e.preventDefault();
+					editor.windowManager.alert(
+						'Id should start with a letter, followed only by letters, numbers, dashes, dots, colons or underscores.'
+					);
+					return;
+				}
 
 				if (isAnchor) {
+					selectedNode.removeAttribute('name');
 					selectedNode.id = id;
 				} else {
@@ -35,4 +64,11 @@
 				}
 			}
+		});
+	};
+
+	if (tinymce.Env.ceFalse) {
+		editor.on('PreInit', function () {
+			editor.parser.addNodeFilter('a', setContentEditable('false'));
+			editor.serializer.addNodeFilter('a', setContentEditable(null));
 		});
 	}
